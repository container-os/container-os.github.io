#!/usr/bin/env python
"""sync_external_docs
cos.goyak.io collect data from some external site.
The scripts let cos.goyak.io focus on the site maintain.
The real data could be maintain from each sub-project repo or hackmd.io.
"""

from __future__ import print_function

import os
import re
import requests
import yaml


def load_md_meta(raw_data):
    """split data and meta of markdown format
    """
    data = raw_data.split("---", 2)
    if len(data) == 3 and data[0] == "":
        return yaml.load(data[1]), data[2]
    return None, raw_data

def remove_comment(md_data):
    """Only show the real data
    """
    # remove comments
    # > [shawn]
    return re.sub(r'\n>\s\[.*\].*\n', '', md_data, flags=re.IGNORECASE)


for (dirpath, dirnames, filenames) in os.walk('content'):
    for filename in filenames:
        if filename[-3:] != ".md":
            continue
        filename = os.path.join(dirpath, filename)
        print("checking file: {}".format(filename))
        with open(filename, "r") as f:
            (meta, old_raw) = load_md_meta(f.read())
        if meta is None or 'raw' not in meta:
            continue

        print("loading data from: {}".format(meta['raw']))
        conn = requests.get(meta['raw'])
        (_, raw) = load_md_meta(conn.content)

        if not (conn.status_code >= 200 and conn.status_code < 300
               ) or raw is None:
            print("- cannot load data from: {}".format(meta['raw']))
            continue

        print("updating file: {}".format(filename))

        meta['zzzNote'] = "do not edit the file directly,\
 edit the raw data instead of it"
        with open(filename, "w") as f:
            yaml_meta = yaml.dump(meta, default_flow_style=False)
            f.write("---\n{}---\n{}".format(yaml_meta, remove_comment(raw)))
